.project-pane {
  @include grid-container;
  left: 5em;
  // height: 1000px;
  max-width: 500px;
  pointer-events: all;
  position: absolute;
  top: 60px;
  width: 34vw;
  z-index: 401;

  .row {
    margin-bottom: 0;
  }

  hr {
    border: 0;
    border-bottom: 1px solid $faded-white;
    border-top: 1px solid $faded-black;
    height: 0;
  }

  .save-pane-state {
    background-color: $secondary-color;
  }

  .pane-container {
    max-height: 100vh;
    transition: max-height $rabbit;
  }

  .pane-card {
    @include grid-container;
    background-color: $white;
    padding: 2em;
  }
}
// The following is the scrolling of the pane was inspired by this
// https://benfrain.com/independent-scrolling-panels-body-scroll-using-just-css/
// Flexbox gives us the flexiness we need.
// The top just stays put as there is no scrolling
// on the body due to the page never exceeding viewport height

.intro-modal-header,
.pane-title,
.vector-detail-title {
  align-items: center;
  background-color: color('blue-grey', 'lighten-5');
  display: flex;
  font-weight: 900;
  height: auto;
  opacity: 1;
  pointer-events: all;
  position: relative;
  transition: opacity $rabbit linear;
  width: 100%;
  z-index: 10;

  .edit-button {
    padding-left: 1em;
  }
}

.pane-title {
  // @include grid-visual;
  @include grid-container;
  padding: .5rem 2rem;

  h3 {
    margin: .25em 0;
  }

  .project-pane-title {
    @include grid-column(11);
    margin-left: 0;
  }
}

.project-pane-close-button {
  position: absolute;
  right: 6px;
  top: 4px;
}

.switch {
  &.list {
    margin-right: 0;
  }
}
// This is our main wrapping element, it's made 100vh high to
// ensure it is always the correct size and then moved into place
// and padded with negative margin and padding

.pane-container,
.vector-detail-container {
  // backface-visibility: hidden;
  display: flex;
  opacity: 1;
  overflow: hidden;
  pointer-events: all;
  // position: relative;
  transition: max-height $rabbit, opacity $rabbit;
  width: 100%;
  will-change: overflow;
  @media only screen and (min-width: 993px) {
    .container {
      width: 85%;
    }
  }
}
// All the scrollable sections should overflow and be whatever
// height they need to be. As they are flex-items (due to being
// inside a flex container) they could be made to stretch full height
// at all times if needed.
//WebKit inertia scrolling is being added here for any present/future devices
//that are able to make use of it.

.pane-content {
  flex: 1;
  height: auto;
  overflow: auto;
  overflow-style: none;
  padding-bottom: 1em;

  .card {
    border-radius: 0 0 2px 2px;
    margin-top: 0;
  }

  .col {
    padding: 0;
    // padding-left: 1em;
  }

  .publish-label {
    font-size: 1em;
    height: 36px;
    padding: 0;
    vertical-align: middle;

    span {
      line-height: 2.2em;

      i {
        vertical-align: sub;
      }
    }

    &::before {
      display: none;
      padding-left: 0;
    }
  }
}

.scrollable-list {
  background-color: $white;
  border: 0;
  display: flex;
  flex-direction: column;

  &.collapsible {
    box-shadow: none;
    margin-top: 0;
  }

  .scrollable-item {
    overflow: hidden;
  }
}

.project-collapsible {
  border: 0;
  box-shadow: none;
  margin-top: 0;

  li {
    @include grid-container;
    border: 1px solid color('grey', lighten-1);
    border-radius: .5em;
    color: $primary-color-light;
    margin: 1em;
    padding-top: .25em;
  }

  .layer-header {
    border-radius: .5em;
    color: $primary-color-light;
    font-weight: bolder;

    .shareable-link {
      opacity: 0;
      transition: opacity $turtle;
    }

    &.active {
      .shareable-link {
        opacity: 1;

        .material-icons {
          cursor: pointer;
          transform: none;
        }
      }
    }

    .shareable-link-modal {
      @include grid-container;
      display: inline-block;
      min-width: 25%;

      i {
        color: inherit;
        font-size: initial;
      }

      button {
        font-size: .75em;
      }

      .close-button {
        cursor: pointer;
      }
    }

    .data-title {
      padding-left: .5em;
    }

    .vector-icon {
      font-size: 1.5em;
      padding: 0;
      vertical-align: middle;
    }
  }

  &:first-child {
    padding-top: 1em;
  }

  .layer-item-body {
    background: $white;
    border-bottom: 0;
    border-radius: .5em;
    box-sizing: border-box;
    float: right;
    max-height: 1em;
    overflow: hidden;
    padding: 0;
    transition: background 5ms, max-height $turtle;
    width: 100%;

    &.bye {
      background: color('red', 'base');
    }

    &.active {
      max-height: 100em;
    }

    p {
      margin: 0;
      padding: 2rem;
    }
  }
}

.remove-layer,
.shareable-link {
  @include grid-column(4);
  @include grid-push(2);
  cursor: pointer;
  font-size: 1.2em;

  &.share-only {
    //
  }
}

.shareable-link-modal {
  font-size: .75em;
  min-width: 320px;
}


.slider-container {
  @include grid-column(12);
  background: $white;
  margin-left: 4px;
  padding-bottom: 1em;
}

.active + .slider-container {
  border-bottom: 0;
  margin-bottom: 0;
}

.hide-nav + .project-pane {

  .pane-container {
    max-height: 0;
    // opacity: 0;
    // top: -100px;
    // width: 0;
  }
}
// Search Pane

.search-bounds {
  a {
    // cursor: pointer;
    font-size: 1.25em;
    vertical-align: middle;

    &.has-bounds {
      color: $secondary-color;
    }
  }

  i {
    vertical-align: sub;
  }
}

.input-field {
  label {
    color: $primary-color-light;
    font-size: 1.25em;
    font-weight: normal;
  }
}

.browse-by-tags {
  .collapsible-header {
    border-radius: 0;
    color: color('grey', 'darken-1');
    cursor: pointer;
    font-size: 1.1em;
    font-weight: normal;
    line-height: normal;
    min-height: inherit;
    padding: 0;

    &.active {
      font-weight: 700;

      i {
        color: color('deep-orange', 'lighten-1');
        opacity: 1;
      }
    }

    i {
      color: color('grey', 'base');
      font-size: 1.1em;
      line-height: normal;
      margin-right: .2em;
      vertical-align: middle;
    }
  }

  .collapsible-body {
    border-radius: 0;
    padding-left: 1.5em;
    padding-top: .5em;

    p {
      padding: 1rem 2rem;
    }
  }
}
// checkbox

a {
  color: $primary-color-dark;
  font-size: 1em;

  i {
    vertical-align: text-top;

    &.active {
      color: $secondary-color;
    }
  }

  &.checkbox-link {
    font-size: 1.25em;
  }
}

.checkbox {
  &.institution {
    margin-left: 1em;
  }
}

.feedback {
  bottom: 1em;
  font-size: 1.2em;
  left: 1em;
  max-width: 20vw;
  opacity: .7;
  padding: 0;
  transition: padding $turtle ease-in-out;
  z-index: 999;

  &.show-flash {
    // max-width: 200px;
    padding: 1em .25em;
  }
}
$base-spacing: 1.5em !default;
$flashes: ( 'alert': #fff6bf, 'error': color('red', 'base'), 'notice': #e5edf8, 'success': color('green', 'base'), ) !default;
@each $flash-type, $color in $flashes {
  .flash-#{$flash-type} {
    background-color: $color;
    // color: shade($color, 60%);
    color: $primary-color;
    display: block;
    position: absolute;
    text-align: center;
    width: 100%;

    a {
      color: shade($color, 70%);
      text-decoration: underline;

      &:focus,
      &:hover {
        color: shade($color, 90%);
      }
    }
  }
}

.reorder-handle {
  cursor: -webkit-grab;
  float: right;
  font-size: 2em;
  margin-left: 12px;
}
// input {
//   &.required {
//   :invalid ~ .clear-text {
//     visibility: visible;
//   }
//   }
// }
// Raster list
// .collapsible-header {
//   &.raster-list-header {
//   padding-right: 0;
//   }
// }
