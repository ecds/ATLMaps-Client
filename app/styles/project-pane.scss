.project-pane {
  // box-shadow: $shadow;
  left: 5em;
  // pointer-events: none;
  position: absolute;
  top: 3em;
  transition: width 3s;
  width: 34%;
  z-index: 999;

  .row {
    margin-bottom: 0;
  }

  hr {
    border: 0;
    border-bottom: 1px solid $faded-white;
    border-top: 1px solid $faded-black;
    height: 0;
  }
}

// The following is the scrolling of the pane was inspired by this
// https://benfrain.com/independent-scrolling-panels-body-scroll-using-just-css/

// Flexbox gives us the flexiness we need.
// The top just stays put as there is no scrolling
// on the body due to the page never exceeding viewport height
.pane-title,
.vector-detail-title {
  align-items: center;
  background-color: color('grey', 'lighten-3');
  display: flex;
  font-weight: 900;
  // height: 2em;
  // justify-content: center;
  position: relative;
  width: 100%;
  z-index: 10;

  h3 {
    font-size: 1.5em;
  }
}

.close-button {
  color: color('grey', 'base');
  margin-left: .75em;
}

// This is our main wrapping element, it's made 100vh high to
// ensure it is always the correct size and then moved into place
// and padded with negative margin and padding
.pane-container,
.vector-detail-container {
  backface-visibility: hidden;
  display: flex;
  height: 100vh;
  overflow: hidden;
  position: relative;
  width: 100%;
  will-change: overflow;

  @media only screen and (min-width: 993px) {
    .container {
      width: 85%;
    }
  }
}

// All the scrollable sections should overflow and be whatever
// height they need to be. As they are flex-items (due to being
// inside a flex container) they could be made to stretch full height
// at all times if needed.

//WebKit inertia scrolling is being added here for any present/future devices
//that are able to make use of it.
.pane-content {
  flex: 1;
  height: auto;
  overflow: auto;
  // overflow-scrolling: touch;
  overflow-style: none;
  // pointer-events: none;

  .card {
    margin-top: 0;
    // pointer-events: all;
  }
}

.scrollable-list {
  background-color: $white;
  border: 0;
  display: flex;
  flex-direction: column;
  padding-bottom: 6em;
  // pointer-events: all;

  &.collapsible {
    box-shadow: none;
    margin-top: 0;
  }

  .scrollable-item {
    overflow: hidden;
  }
}

.collapsible {

  .collapsible-header {
    border-bottom: 0;
    border-radius: .5em;
    color: $primary-color-light;
    font-size: 1.5em;
    font-weight: bolder;
    padding: 1rem;

    i {
      font-size: 1.5em;
    }
  }

  &:first-child {
    padding-top: 1em;;
  }

  .collapsible-body {
    background: $white;
    border-bottom: 0;
    border-radius: .5em;
    overflow: hidden;
  }

  li {
    border: 1px solid color('grey', lighten-1);
    border-radius: .5em;
    margin: 1em;
  }
}

.slider-container {
  background: $white;
  // border-bottom: 1px solid color('grey', 'lighten-2');
  border-radius: .5em;
  height: 2rem;
  margin-bottom: 1em;
}

.active + .slider-container {
  border-bottom: 0;
  margin-bottom: 0;
}

.hide-nav + .project-pane {
  display: none;
  width: 0;
}
// Entirely optional â€“ just wanted to remove the scrollbar on
// WebKit browsers as I find them ugly
// .Left::-webkit-scrollbar,
// .Middle::-webkit-scrollbar,
// .Right::-webkit-scrollbar {
//     display: none;
// }
//  Left and Right are set sizes while the Middle is set to flex one so it occupies all remaining space. This could be set as a width too if prefereable, perhaps using calc.*/
// .Left {
//     width: 12.5rem;
//     background-color: indigo;
// }

// .Right {
//     width: 12.5rem;
//     background-color: violet;
// }


//
//
// vvvv OLD vvvv
//
//


// @import 'layer-citation';
//
// .project-pane {
//   left: 5em;
//   padding: .5em;
//   pointer-events: auto; // Allow the pane to respond to click.
//   position: fixed; // This is preventing the scroll and/or causing the problems.
//   top: 5.65em;
//   width: calc(33% - 2em);
//
//   h3 {
//     margin: .25em 0;
//   }
// }
//
// .project-route {
//   background-color: $white;
//   border-left: 1px solid $border;
//   border-right: 1px solid $border;
//   box-shadow: -3px 0 10px 0 $shadow;
//
//   .route-content {
//     max-height: 95vh;
//     overflow: scroll;
//     padding: 1em;
//   }
//
//   // layer controls in edit view
//   .panel-footer {
//     // margin-bottom: 1px;
//     margin: 0;
//     pointer-events: all;
//   }
//
// }
//
// .layer-heading {
//   padding: 0 1em;
//   pointer-events: all;
//
//   table {
//     width: 100%;
//
//     td {
//       padding: 0 .5em;
//     }
//   }
//
//   a {
//     cursor: pointer;
//   }
// }
//
// // article {
// //   color: material-color(md_grey, 800);
// //   padding: 2em;
// // }
//
// .layer-article {
//   padding: 0;
// }
//
// ul {
//   li {
//     // border-width: 1px;
//     // border-style: solid;
//     // border-color: lightgrey;
//     // border-radius: 0.25em;
//     // margin-bottom: 0.5em;
//   }
//
//   // li.vector-layer {
//   //   padding-left: .5em;
//   // }
//
//   .layer-article {
//     padding: 1em;
//   }
// }
//
// // Raster Panel Stuff
// .raster-list {
//   .panel {
//     // padding: .25em 1em;
//   }
//
//   .panel-body {
//     padding: 0 .75em;
//   }
//
//   .row {
//     padding: 0 1em;
//   }
//
//   .panel-footer {
//     padding: .5em 1em;
//   }
//
//   .reorder {
//     padding: .25em 0 0;
//   }
//
//   ul {
//     list-style: none;
//     margin-bottom: 17rem;
//     padding-left: 0;
//
//     li {
//       border-color: none;
//       border-radius: 0;
//       border-style: none;
//       border-width: 0;
//       margin-bottom: 0;
//       width: 100%;
//     }
//   }
// }
//
// .handle {
//   cursor: grab;
//   font-size: 1.75em;
//   margin-right: 10px;
//   transform: rotate(90deg);
// }
//
// .opacity-slider {
//   padding-left: 5px;
//
//   input {
//     display: none;
//   }
// }
